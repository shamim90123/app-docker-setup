### build and run by cmd

sudo docker network create my-network
sudo docker run -d --name mysql-container --network my-network -e MYSQL_ROOT_PASSWORD=123456 -e MYSQL_DATABASE=hanif_test_db -e MYSQL_USER=hanif -e MYSQL_PASSWORD=123456 -p 3308:3306 mysql:latest
sudo docker run -d --name  phpmyadmin-container --network my-network -e PMA_ARBITRARY=1 -e PMA_HOST=mysql-container -p 8083:80 phpmyadmin/phpmyadmin:latest
sudo docker build -t new-app5.0 .
sudo docker run -d -p 8060:80 --name new-app5.0 --network my-networkÂ new-app5.0



### build and run php app by dockerfile and compose file
## Dockerfile
    # Use the official PHP image as the base image
    FROM php:7.4-apache

    # WORKDIR /var/www/html

    # RUN docker-php-ext-install pdo_mysql
    RUN docker-php-ext-install mysqli && docker-php-ext-enable mysqli


    # Copy your PHP file into the container
    COPY . /var/www/html/

    # Expose port 80 for Apache
    EXPOSE 80

## docker-compose.yml 

    version: '3'
    services:
    phpcrud:
        build: .
        image: php-crud-app-yml
        container_name: php-crud-container-yml
        ports:
        - "8081:80"
        environment:
        MYSQL_HOST: mysql-container  # Assuming this is the hostname of your MySQL container
        MYSQL_ROOT_PASSWORD: 123456
        MYSQL_DATABASE: crud_example
        MYSQL_USER: shamim
        MYSQL_PASSWORD: 123456
        networks:
        - shamim-network
        volumes:
        - E:\\laragon\\www\\php-user-api:/var/www/html  # Replace with the actual path to your PHP app

    networks:
    shamim-network:
        external: true

    # docker-compose down
    # docker-compose up -d
